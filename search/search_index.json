{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs PDF Generate Plugin","text":"<p>The pdf-generate plugin will generate separate PDF files for each markdown page in your MkDocs repository using WeasyPrint.  The exported documents support many advanced features such as table of contents, customisable cover page,  ability to control page orientation, support for CSS paged media module  CSS paged media module , and using MkDocs page metadata to generate cover page.</p>"},{"location":"#requirements","title":"Requirements","text":"<ol> <li>This package requires MkDocs version 1.0 or higher (0.17 works as well)</li> <li>Python 3.8 or higher</li> <li>WeasyPrint depends on cairo, Pango and GDK-PixBuf which need to be installed separately. Please follow the installation instructions for your platform carefully:<ul> <li>Linux</li> <li>MacOS</li> <li>Windows</li> </ul> </li> <li>Explicit support for your mkdocs theme is probably required. As of now, the only supported theme is mkdocs-material.     A generic version will just generate the PDF files and put the download link into a <code>&lt;link&gt;</code> tag.</li> </ol>"},{"location":"#installation","title":"Installation","text":"<p>Install package with pip: </p> Linux &amp; MacOSWindows <pre><code>python -m pip install -e \"git+https://github.com/iSOLveIT/mkdocs-pdf-generate/#egg=mkdocs-pdf-generate\"\n</code></pre> <pre><code>C:&gt; python -m pip install -e \"git+https://github.com/iSOLveIT/mkdocs-pdf-generate/#egg=mkdocs-pdf-generate\"\n</code></pre> <p>Install from source repository in a virtual environment:</p> <pre><code>cd [YOUR_PROJECT_DIRECTORY]\ngit clone https://github.com/iSOLveIT/mkdocs-pdf-generate\ncd mkdocs-pdf-generate\npip install -e .\n</code></pre> <p>Enable the plugin in your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n- search\n- pdf-generate\n</code></pre> <p>Note: If you have no <code>plugins</code> entry in your config file yet, you'll likely also want to add the <code>search</code> plugin. MkDocs enables it by default if there is no <code>plugins</code> entry set, but now you have to enable it explicitly.</p> <p>More information about plugins in the MkDocs documentation.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>From reporting a bug to submitting a pull request: every contribution is appreciated and welcome. Report bugs, ask questions and request features using Github issues.</p> <p>If you want to contribute to the code of this project, please read the Contribution Guidelines.</p>"},{"location":"#special-thanks","title":"Special thanks","text":"<ul> <li>Terry Zhao the author of the MkDocs PDF Export Plugin the source of our inspiration. We've used some of his code in this project.</li> </ul>"},{"location":"changelog/","title":"Changelog &amp; License","text":""},{"location":"changelog/#license","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2022 Randy Duodu</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#021","title":"0.2.1","text":"<p>Released: 22-03-2023</p> <ul> <li>Updated documentation and made minor changes to plugin code.</li> <li>Added the <code>csv_name</code> local option.</li> <li>Improvement: Added feature to generate a CSV file for all documents with the <code>toc_txt</code> local option set to <code>true</code>.</li> <li>Improvement: Added changes that appends the revision number of a document to the filename.</li> <li>Bugfix: Added default URL to use if <code>site_url</code> is not defined in mkdocs.yml. Fix for issue #15.</li> <li>Improvement: Added the <code>toc_txt</code> local option that allows users to build TXT file containing the Table of Contents</li> <li>Minor improvements: Rewrote logging messages.</li> </ul>"},{"location":"changelog/#020","title":"0.2.0","text":"<p>Released: 14-02-2023</p> <ul> <li>Package setup: Changed package from using setuptools to pyproject.toml</li> </ul>"},{"location":"options/","title":"Options","text":""},{"location":"options/#global-options","title":"Global Options","text":"<p>The plugin allows users to pass in both global and local options.</p> <p>Note</p> <p>Local options have higher precedence than global options.</p> <p>Some of these global options are used as default options when local options are not set. The global options are passed to the plugin through <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n- pdf-generate:\nauthor: \"Randy Duodu\"\nauthor_logo: img/logo.svg\ncopyright: \"Copyright \u00a9 2022 - MkDocs PDF Generate\"\ndisclaimer: \"Disclaimer: Content can change at anytime and best to refer to website for latest information.\"\ncover: true\ncover_title: TITLE TEXT\ncover_subtitle: SUBTITLE TEXT\ncustom_template_path: TEMPLATES PATH\ntoc: false\ntoc_level: 3\ntoc_title: TOC TITLE TEXT\ntoc_numbering: true\ncover_images:\ndefault: img/default.svg\ntype1: img/type1.png\ntype2: https://example.com/cover.svg\nenabled_if_env: ENABLE_PDF_EXPORT\n</code></pre>"},{"location":"options/#for-cover","title":"for Cover","text":""},{"location":"options/#cover","title":"<code>cover</code>","text":"<p>Set the value to <code>false</code> if you don't need a cover page.  default: <code>true</code></p>"},{"location":"options/#cover_title","title":"<code>cover_title</code>","text":"<p>Set the title text in cover page. </p> <p>Note</p> <p>The following rule is applied when setting the value for cover title text in cover page.</p> <p>Cover Title precedence:</p> <ol> <li>title (local pdf metadata option) </li> <li>H1 heading for page </li> <li>cover title (global) </li> <li><code>site_name</code> variable in your project's <code>mkdocs.yml</code></li> </ol> <p>default: use <code>site_name</code> in your project's <code>mkdocs.yml</code></p>"},{"location":"options/#cover_subtitle","title":"<code>cover_subtitle</code>","text":"<p>Set the subtitle text in cover page.</p> <p>Note</p> <p>The following rule is applied when setting the value for cover subtitle text in cover page.</p> <p>Cover Subtitle precedence:</p> <ol> <li>subtitle (local pdf metadata option) </li> <li>type (local pdf metadata option)</li> <li>cover subtitle (global) </li> </ol> <p>default: <code>None</code></p>"},{"location":"options/#author","title":"<code>author</code>","text":"<p>Set the author text.  default: use <code>site_author</code> in your project's <code>mkdocs.yml</code></p>"},{"location":"options/#author_logo","title":"<code>author_logo</code>","text":"<p>Provide a logo image which you can use in the cover page. </p> <p>Tip</p> <p>Using an SVG image as the value for author logo is recommended.</p> <p>default: use <code>theme.logo</code> in your project's <code>mkdocs.yml</code></p>"},{"location":"options/#copyright","title":"<code>copyright</code>","text":"<p>Set the copyright text.  default: use <code>copyright</code> in your project's <code>mkdocs.yml</code></p>"},{"location":"options/#disclaimer","title":"<code>disclaimer</code>","text":"<p>Set the disclaimer text.  default: <code>None</code></p>"},{"location":"options/#cover_images","title":"<code>cover_images</code>","text":"<p>Set the cover image for specific document types. </p> <p>The option takes a <code>key-value</code> pair where the <code>key</code> must be the same value as you specified for the type  local pdf metadata option.</p> <p>The <code>value</code> for a <code>key</code> must be the path to the image.  </p> <p>Example: <pre><code>- pdf-generate:\ncover_images:\ndefault: img/home-banner.svg\nhome: img/manual-banner.svg\noptions: img/project-banner.svg\ncustomize: img/tutorial-banner.svg\n</code></pre></p> <p>Note</p> <p>Apart from the <code>default</code> key-value pair under cover_images, the other key-value pairs can have user-defined values.</p> <p>Recommended: You must specify an image path for the <code>default</code> key-value pair. We will use the image as  the cover image for any document that does not specify the type local pdf metadata option.</p> <p>default: <code>None</code></p>"},{"location":"options/#for-heading-and-toc","title":"for Heading and TOC","text":""},{"location":"options/#toc","title":"<code>toc</code>","text":"<p>Set the value to <code>false</code> if you don't need a table of content section in the PDF document.  default: <code>true</code></p>"},{"location":"options/#toc_title","title":"<code>toc_title</code>","text":"<p>Set the title text for Table of Contents.  default: <code>Table of Contents</code> </p>"},{"location":"options/#toc_level","title":"<code>toc_level</code>","text":"<p>Set the level of Table of Contents. This value is enabled in the range of from <code>1</code> to <code>6</code>.  default: <code>4</code></p>"},{"location":"options/#toc_numbering","title":"<code>toc_numbering</code>","text":"<p>Set the value to <code>false</code> if you don't want your table of contents to be numbered in the PDF document.  default: <code>true</code></p>"},{"location":"options/#and-more","title":"... and more","text":""},{"location":"options/#enable_csv","title":"<code>enable_csv</code>","text":"<p>Set the value to <code>true</code> if you want to create a CSV file containing data about each valid document based on the format below:</p> <pre><code>title, type, revision, , , pdf_url, pdf_checksum, txt_checksum, txt_url\n</code></pre> <p>default: <code>false</code></p> <p>Note</p> <p>The CSV file will contain data about documents with the toc_txt local option set to <code>true</code>.</p>"},{"location":"options/#custom_template_path","title":"<code>custom_template_path</code>","text":"<p>A relative path inside your projects' directory. This folder is where you put both the custom cover template and custom plugin CSS file (<code>cover.html and custom.css</code>).</p> <p>Info</p> <p>The custom template's filename can either be <code>cover</code> or the document type with any of these file extensions <code>.html.j2</code>, <code>.html.jinja2</code>, <code>.html</code>, or <code>.htm</code>. Example: <code>cover.html.j2</code>, <code>cover.html.jinja2</code>, <code>cover.html</code>, <code>cover.htm</code> OR  Example: if document type is <code>manual</code> then you can create a template file called <code>manual.html</code> or <code>manual.html.j2</code> or <code>manual.html.jinja2</code> or <code>manual.htm</code>.</p> <p>You can refer to this example  about how to use a custom cover template and custom CSS. </p> <p>default: <code>use default plugin template</code> </p>"},{"location":"options/#enabled_if_env","title":"<code>enabled_if_env</code>","text":"<p>Setting this option will generate PDF files only if there is an environment variable set to 1.  The environment variable must match the value of <code>enabled_if_env</code>.</p> <p>This is useful to disable building the PDF files during development, since it can take a long time to export all files.  default: <code>None</code></p> <p>PDF generation can take significantly longer than HTML generation which can slow down MkDocs built-in dev-server.</p> <p>Adding <code>enabled_if_env: ENABLE_PDF_EXPORT</code> disables PDF generation during development and runs the dev-server normally:</p> <pre><code>$ mkdocs serve\nINFO     -  Building documentation...\nINFO     -  PDF export is disabled (set environment variable ENABLE_PDF_EXPORT to 1 to enable)\nINFO     -  Cleaning site directory\nINFO     -  Documentation built in 0.54 seconds\nINFO     -  [08:51:24] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO     -  [08:51:24] Serving on http://127.0.0.1:8000/\n</code></pre> <p>and to build PDF files, set the <code>ENABLE_PDF_EXPORT=1</code> environment variable:</p> <pre><code>$ ENABLE_PDF_EXPORT=1 mkdocs build\n...\nINFO    -  Converting 2 files to PDF took 1.82s\nINFO    -  Documentation built in 2.29 seconds\n</code></pre>"},{"location":"options/#verbose","title":"<code>verbose</code>","text":"<p>Setting this to <code>true</code> will show all WeasyPrint debug messages during the build.  default: <code>false</code></p>"},{"location":"options/#debug-for-development-purposes-only","title":"<code>debug</code> (for development purposes only)","text":"<p>Setting this to <code>true</code> enables the debug mode which saves the HTML content used in generating the PDF files  into a folder called <code>pdf_html_debug</code>.  The <code>pdf_html_debug</code> folder is relative to the documentation source directory.</p> <p>This option is intended to help users in writing appropriate CSS styles for the HTML  content used to generate the PDF documents.</p> <p>default: <code>false</code></p> <p>Note</p> <ul> <li>The <code>debug</code> option only works with the <code>mkdocs build</code> command.</li> <li>It is recommended to add the <code>pdf_html_debug</code> folder to your ignored files when using a version control system.</li> </ul>"},{"location":"options/#debug_target-for-development-purposes-only","title":"<code>debug_target</code> (for development purposes only)","text":"<p>This option helps you to generate a PDF file for a single target document. The value for <code>debug_target</code> should be the relative path to the target document.  Example: <code>debug_target: customise/customisation.md</code>.</p> <p>This option is intended to help reduce the time spent by users in debugging a single document used to generate a PDF file.</p> <p>default: <code>null</code></p> <p>Note</p> <ul> <li>The <code>debug_target</code> option only works with the <code>mkdocs build</code> command.</li> <li>You must set the debug option to <code>true</code>, if you want to use the <code>debug_target</code> option.</li> </ul>"},{"location":"options/#media_type","title":"<code>media_type</code>","text":"<p>Allows you to use a different CSS media type (or a custom one like <code>pdf-generate</code>) for the PDF export.  default: <code>print</code></p>"},{"location":"options/#theme_handler_path","title":"<code>theme_handler_path</code>","text":"<p>Allows you to specify a custom theme handler module. This path must be relative to your project root (See example below).  default: <code>None</code></p> <p><code>mkdocs.yml</code>: <pre><code>plugins:\n- pdf-generate:\ntheme_handler_path: theme-handler\n</code></pre></p> <pre><code>project-root\n\n\u251c\u2500\u2500 theme-handler.py\n\n\u251c\u2500\u2500 docs\n\n\u251c\u2500\u2500 mkdocs.yml\n\n\u251c\u2500\u2500 site\n\n.\n\n.\n</code></pre>"},{"location":"options/#local-options","title":"Local Options","text":"<p>The plugin allows you to set document specific options using the Markdown page metadata.  If a page metadata is specified, it has higher precedence than the global options.</p> <p>The local options are specified in the specific Markdown document you want to use:</p> <pre><code>---\npdf:\n  - build: false  \n  - filename: Plugin Options\n  - title: Options for MkDocs PDF Generate Plugin\n  - type: Manual\n  - revision: 0.2\n  - toc_txt: true \n---\n</code></pre> <p>The following options are available:</p> <ul> <li>build</li> <li>title</li> <li>subtitle</li> <li>type</li> <li>filename</li> <li>revision</li> <li>toc_txt</li> </ul>"},{"location":"options/#build","title":"<code>build</code>","text":"<p>Allows you to specify whether to generate a PDF file for a Markdown file. Value is <code>true</code> or <code>false</code>.</p> <p>Note</p> <p>The function of the build option is different from that of the enabled_if_env. The <code>build</code> option disables PDF generation for a single Markdown file while  <code>enabled_if_env</code> disables PDF generation for the entire project.</p> <p>default: <code>true</code></p>"},{"location":"options/#title","title":"<code>title</code>","text":"<p>Set the title text in cover page. </p>"},{"location":"options/#subtitle","title":"<code>subtitle</code>","text":"<p>Set the subtitle text in cover page. </p>"},{"location":"options/#type","title":"<code>type</code>","text":"<p>Set the document type. </p> <p>Note</p> <ul> <li>We use the value, of this option, in selecting the document's cover image from    the cover_images option.</li> <li>Also, we use the value, of this option, in selecting the custom cover template.</li> </ul>"},{"location":"options/#filename","title":"<code>filename</code>","text":"<p>Set the filename to use for a specific page when downloading the PDF document.</p> <p>Note</p> <p>Filename precedence: </p> <ol> <li>filename (local pdf metadata) - formatted such that all are valid characters</li> <li>title (local pdf metadata) - formatted such that all are valid characters</li> <li>title (local metadata) - formatted such that all are valid characters</li> <li>H1 - formatted such that all are valid characters</li> </ol>"},{"location":"options/#revision","title":"<code>revision</code>","text":"<p>Set the revision text in cover page. </p>"},{"location":"options/#csv_name","title":"<code>csv_name</code>","text":"<p>Set the product name for a row in the CSV file.  The value for this option is used as the title for a particular row in the CSV file. </p>"},{"location":"options/#toc_txt-experimental","title":"<code>toc_txt</code> (experimental)","text":"<p>Set to <code>true</code> if you want to build a TXT file that contains the Table of Contents of the Markdown file.  Value is <code>true</code> or <code>false</code>.</p> <p>Note</p> <p>The TXT file acts as the Table of Contents lookup table for a PDF document. </p> <p>Warning</p> <p>You must set both the toc and toc_numbering global options to <code>true</code> before using this option.</p> <p>default: <code>false</code></p>"},{"location":"customise/customisation/","title":"Customize Plugin","text":""},{"location":"customise/customisation/#custom-cover-page","title":"Custom cover page","text":"<p>You can create a custom cover page using a jinja2 or html file.</p> <p>Note</p> <p>You should store the custom cover template file in the directory used for  the custom_template_path.</p> <p>The plugin provides the following variables which you can use in your custom Jinja template:</p> <ul> <li>cover_title</li> <li>cover_subtitle</li> <li>cover_image</li> <li>author</li> <li>author_logo</li> <li>copyright</li> <li>disclaimer</li> <li>site_url</li> <li>revision</li> <li>custom variables from the <code>extra:</code> setting in your <code>mkdocs.yml</code></li> <li>and all the options you provide under local pdf metadata of a Markdown file.</li> </ul> <p>Using jinja2 syntax, you can access all the data above. E.g. use <code>{{ author }}</code> to get the value for the author option:</p> <pre><code>plugins:\n- pdf-generate:\nauthor: Duodu Randy\n</code></pre>"},{"location":"customise/customisation/#using-custom-cover-template","title":"Using custom cover template","text":"<p>You can specify the cover page to use for your PDF by following these steps:</p> <p>Step 1</p> <p>Set the custom_template_path option for the plugin to the directory you want to  store the cover template file.</p> <pre><code>plugins:\n- pdf-generate:\ncustom_template_path: TEMPLATES PATH\n</code></pre> <p></p> <p>Step 2</p> <p>Under the directory you set as <code>custom_template_path</code>, create a custom template file. The custom template's filename can either be <code>cover</code> or the document type.  E.g. <code>cover.html</code>, <code>cover.html.j2</code>, or if the document type is <code>manual</code> then <code>manual.html</code>, <code>manual.html.j2</code>.</p> <p>In the cover template file, write your preferred template syntax into it.</p> <p>Example of a cover template file using Jinja2 syntax:</p> <pre><code>&lt;article id=\"doc-cover\"&gt;\n    {% if cover_image is defined %}\n        &lt;div class=\"wrapper upper\"&gt;\n&lt;div class=\"logo\" style=\"background-image: url('{{ cover_image | to_url }}');\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n    {% else %}\n        &lt;div class=\"wrapper\"&gt;&lt;/div&gt;\n    {% endif %}\n    &lt;div class=\"wrapper\"&gt;\n&lt;h1&gt;{{ cover_title | e }}&lt;/h1&gt;\n&lt;h2&gt;{{ cover_subtitle | e }}&lt;/h2&gt;\n        {% if revision %}\n            &lt;h3&gt;Revision {{ revision | e }}&lt;/h3&gt;\n        {% endif %}\n    &lt;/div&gt;\n&lt;div class=\"properties\"&gt;\n&lt;address&gt;\n            {% if author %}\n                &lt;p id=\"author\"&gt;{{ author | e }}&lt;/p&gt;\n            {% endif %}\n            &lt;a href=\"{{ site_url }}\" id=\"project_logo\" title=\"Resource Centre\"&gt;\n&lt;img src=\"{{ author_logo }}\" alt=\"Company Logo\"\nstyle=\"width:80px;height:30px\"/&gt;\n&lt;/a&gt;\n&lt;/address&gt;\n&lt;/div&gt;\n&lt;div class=\"reserved_rights\"&gt;\n&lt;address&gt;\n            {% if copyright %}\n                &lt;p id=\"copyright\"&gt;{{ copyright | e }}&lt;/p&gt;\n            {% endif %}\n            {% if disclaimer %}\n                &lt;p id=\"disclaimer\"&gt;{{ disclaimer | e }}&lt;/p&gt;\n            {% endif %}\n        &lt;/address&gt;\n&lt;/div&gt;\n&lt;/article&gt;\n</code></pre> <p>Step 3</p> <p>Save the file changes and rebuild your MkDocs project. </p>"},{"location":"customise/customisation/#adjusting-the-output","title":"Adjusting the output","text":"<p>The resulting PDF can be customized easily by adding a custom stylesheet such as the following:</p> <p><pre><code>@page {\nsize: a4 portrait;\nmargin: 25mm 10mm 25mm 10mm;\ncounter-increment: page;\nfont-family: \"Roboto\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\nwhite-space: pre;\ncolor: grey;\n@top-left {\ncontent: '\u00a9 2018 My Company';\n}\n@top-center {\ncontent: string(chapter);\n}\n@top-right {\ncontent: 'Page ' counter(page);\n}\n}\n</code></pre> For this to take effect, you need to create a <code>custom.css</code> file.</p> <p>Note</p> <p>You should store the <code>custom.css</code> file in the directory used for  the custom_template_path.</p> <p>The plugin provides the following CSS variables and named strings which you can use in your <code>custom.css</code> file:</p> <ul> <li>--title</li> <li>--subtitle</li> <li>--author</li> <li>--author-logo</li> <li>--copyright</li> <li>--type</li> <li>--site_url</li> <li>--revision</li> <li>--filename</li> <li>chapter</li> </ul> <p></p> <p>Using the <code>var()</code> CSS function, you can access all the CSS variables provided by the plugin. E.g. use <code>var(--author)</code> to get the value for the author option.</p> <p>You can also use the <code>string()</code> function to access the value of a named string. E.g. use <code>string(chapter)</code> to get the value for a chapter.</p> <p>The custom CSS is appended to the MkDocs stylesheets so, you can override rules by using the <code>!important</code> CSS keyword but be cautious about it.</p>"},{"location":"customise/customisation/#changing-the-orientation-of-a-page","title":"Changing the orientation of a page","text":"<p>The plugin allows you to change the orientation of a page to fit the content on that page.</p> <p>For example, if you have a table on a page, and it is too wide to fit the current orientation used by the page,  you can change the page orientation of the individual page by doing the following:</p> <ul> <li>Wrap the markdown content in a <code>div</code> html element. The <code>div</code> element should have a <code>markdown</code> attribute and    a <code>class</code> attribute set to <code>\"rotated-page\"</code>. E.g. <code>&lt;div markdown class=\"rotated-page\"&gt;PLACE CONTENT HERE&lt;/div&gt;</code></li> <li>Create a <code>custom.css</code> file and set these CSS variables under a <code>:root {}</code> CSS selector: <ul> <li><code>--base-page-orientation</code> - default page orientation to use and</li> <li><code>--rotated-page-orientation</code> - page orientation to use for rotated pages.  E.g. <code>:root {--base-page-orientation: a4 portrait; --rotated-page-orientation: a4 landscape;}</code></li> </ul> </li> </ul> <p>In the example above, the example section is wrapped inside a <code>div</code> like below:</p> <pre><code>&lt;div markdown class=\"rotated-page\"&gt;\n\n#### Example\nIn this example, we are going to change the page orientation for [this subsection](#example).\n\n!!! note\n\n    Download the generated pdf to see the result.\n\n| Header / Pin | Symbol  | Type  | Description                                          |\n|:-------------|:-------:|:-----:|:-----------------------------------------------------|\n| Header1 - 1  |   GND   | Power | Module / System GND                                  |\n| Header1 - 2  |   IO3   |  I/O  | GPIO \u2013 Capabilities are Module Dependent             |\n| Header1 - 3  |   IO2   |  I/O  | GPIO \u2013 Capabilities are Module Dependent             |\n| Header1 - 4  |   IO1   |  I/O  | GPIO \u2013 Capabilities are Module Dependent             |\n| Header1 - 5  | 3V3 OUT | Power | 3.3V Power Output for User                           |\n| Header2 - 1  |  RESET  |   I   | System Reset, Active Low                             |\n| Header2 - 2  |   GND   | Power | Module / System GND                                  |\n| Header2 - 3  |   RX    |   I   | Asynchronous Serial UART Receive Pin (TX from Host)  |\n| Header2 - 4  |   TX    |   O   | Asynchronous Serial UART Transmit Pin (RX from Host) |\n| Header2 - 5  |   5V    | Power | Module 5V Input, Main Power                          |\n\n&lt;/div&gt;\n</code></pre> <p>and the <code>custom.css</code> file contains this code:</p> <pre><code>:root {\n--base-page-orientation: a4 portrait;\n--rotated-page-orientation: a4 landscape;\n}\n</code></pre> <p>Note</p> <p>You can write your own custom CSS to handle page orientation but you must use the named page approach like below:</p> <pre><code>/* Named page \u2193 */\n@page rotated {\nsize: A3 landscape;\n}\n.rotated-page {\npage: rotated;\npage-break-before: always;\npage-break-after: always;\n}\n</code></pre>"},{"location":"customise/customisation/#example","title":"Example","text":"<p>In this example, we are going to change the page orientation for this subsection.</p> <p>Note</p> <p>Download the generated pdf to see the result.</p> Header / Pin Symbol Type Description Header1 - 1 GND Power Module / System GND Header1 - 2 IO3 I/O GPIO \u2013 Capabilities are Module Dependent Header1 - 3 IO2 I/O GPIO \u2013 Capabilities are Module Dependent Header1 - 4 IO1 I/O GPIO \u2013 Capabilities are Module Dependent Header1 - 5 3V3 OUT Power 3.3V Power Output for User Header2 - 1 RESET I System Reset, Active Low"}]}