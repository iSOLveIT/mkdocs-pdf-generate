# This is a workflow to compile MkDocs sources on *main* branch and update *docs-build* branch

name: Compile MkDocs source and update docs-build branch

env:
  ENABLE_PDF_EXPORT: 1

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches:
      - main
      - dev
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  docs:
    name: "${{ matrix.os }}: py${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true  # Set on "false" to get the results of ALL builds
      matrix:
        os: [ "ubuntu-latest" ]
        # 3.9.8 seems to be broken with type_ast
        # https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1829077.html
        python-version: ["3.10", "3.11"]
        exclude:
          # Check only newest setups for win server
          - os: "windows-latest"
            python-version: "3.10"
    env:
      ENABLE_PDF_EXPORT: '1'
    steps:
    - name: Set Up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will fail to push refs to destination repo
    - name: Update pip
      run: |
        pip install -U wheel
        pip install -U setuptools
        python -m pip install -U pip
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: Pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/docs_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install required packages for WeasyPrint on Linux
      run: |
        sudo apt install libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0 libffi-dev libjpeg-dev libopenjp2-7-dev
      if: runner.os == 'Linux'

    - name: Install PDF generator
      run: |
        pip install -e .
    - name: MkDocs Link Check
      uses: gaurav-nelson/github-action-markdown-link-check@1.0.13
      with:
        use-verbose-mode: 'yes'
        folder-path: 'docs/'
      if: runner.os == 'Linux'
    - name: Build MkDocs
      uses: iSOLveIT/mkdocs-notes@main
      with:
        config_file_path: docs/mkdocs.yml
        documentation_path: docs/
        requirements_path: docs_requirements.txt
        target_branch: docs-build
        mkdocs_version: '1.5.2'
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: docs-build
        force: true
      if: matrix.python-version == '3.10'
